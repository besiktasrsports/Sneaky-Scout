<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>